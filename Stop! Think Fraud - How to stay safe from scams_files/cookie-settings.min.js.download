(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
/* globals jQuery, cookieOptions, googleAnalytics, globalGoogleAnalytics, ga4Analytics, googleFloodlight, facebookPixel, linkedinInsight, googleTagManager, globalGoogleTagManager */
'use strict'

const CookieMonster = require('@firstandthird/cookie-monster').FirstandthirdCookieMonster

const saveCookieSettings = function () {
  const analyticsOption = jQuery('input[name="analytics"]:checked').val()
  const marketingOption = jQuery('input[name="marketing"]:checked').val()
  if (analyticsOption === 'off') {
    deactivateAnalyticsScripts()
  }
  if (marketingOption === 'off') {
    deactivateMarketingScripts()
  }
  CookieMonster.set('cookies-analytics-option', analyticsOption, 365)
  CookieMonster.set('cookies-marketing-option', marketingOption, 365)
}

const getCurrentCookieOption = function (cookieType) {
  if (CookieMonster.get('cookies-' + cookieType + '-option')) {
    return CookieMonster.get('cookies-' + cookieType + '-option')
  } else {
    return 'off'
  }
}

const activateAnalyticsScripts = function () {
  if (typeof googleAnalytics === 'object') {
    googleAnalytics.on()
  }
  if (typeof ga4Analytics === 'object') {
    ga4Analytics.on()
  }
  if (typeof globalGoogleAnalytics === 'object') {
    globalGoogleAnalytics.on()
  }
  if (typeof globalGoogleTagManager === 'object') {
    globalGoogleTagManager.on()
  }
}

const deactivateAnalyticsScripts = function () {
  if (typeof googleAnalytics === 'object') {
    googleAnalytics.off()
    googleAnalytics.firstPartyCookies.forEach(function (cookie) {
      document.cookie = cookie + '=; path=/; domain=' + cookieOptions.cookieDomain + '; expires=Thu, 01 Jan 1970 00:00:01 GMT;'
    })
  }
  if (typeof ga4Analytics === 'object') {
    ga4Analytics.off()
    ga4Analytics.firstPartyCookies.forEach(function (cookie) {
      document.cookie = cookie + '=; path=/; domain=' + cookieOptions.cookieDomain + '; expires=Thu, 01 Jan 1970 00:00:01 GMT;'
    })
  }
  if (typeof globalGoogleAnalytics === 'object') {
    globalGoogleAnalytics.off()
    globalGoogleAnalytics.firstPartyCookies.forEach(function (cookie) {
      document.cookie = cookie + '=; path=/; domain=' + cookieOptions.cookieDomain + '; expires=Thu, 01 Jan 1970 00:00:01 GMT;'
    })
  }
}

const activateMarketingScripts = function () {
  if (typeof googleFloodlight === 'object') {
    googleFloodlight.on()
  }
  if (typeof facebookPixel === 'object') {
    facebookPixel.on()
  }
  if (typeof linkedinInsight === 'object') {
    linkedinInsight.on()
  }
  if (typeof googleTagManager === 'object') {
    googleTagManager.on()
  }
}

const deactivateMarketingScripts = function () {
  if (typeof googleFloodlight === 'object') {
    googleFloodlight.off()
  }
  if (typeof facebookPixel === 'object') {
    facebookPixel.off()
    facebookPixel.firstPartyCookies.forEach(function (cookie) {
      document.cookie = cookie + '=; path=/; domain=' + cookieOptions.cookieDomain + '; expires=Thu, 01 Jan 1970 00:00:01 GMT;'
    })
  }
}

const activateAllTrackingScripts = function () {
  activateAnalyticsScripts()
  activateMarketingScripts()
}

const activateApprovedTrackingScripts = function () {
  if (cookieOptions.useGovukCookieSettings === '1') {
    if (getCurrentCookieOption('analytics') === 'on') {
      activateAnalyticsScripts()
    }
    if (getCurrentCookieOption('marketing') === 'on') {
      activateMarketingScripts()
    }
  } else {
    activateAllTrackingScripts()
  }
}

const setupCookieSettingsForm = function ($) {
  if ($('#cookie-settings-panel').length) {
    $('#cookie-settings-panel').removeClass('display-none')
    $('input[name="analytics"][value="' + getCurrentCookieOption('analytics') + '"]').prop('checked', true)
    $('input[name="marketing"][value="' + getCurrentCookieOption('marketing') + '"]').prop('checked', true)
    $('#save-cookie-settings').click(function () {
      saveCookieSettings()
      $('#cookie-settings-saved').removeClass('display-none')
      window.scrollTo(0, 0)
    })
  }
}

const displayCookieBanner = function ($) {
  if (!CookieMonster.get('cookies-analytics-option') && !CookieMonster.get('cookies-marketing-option')) {
    $('#global-cookie-message').removeClass('display-none')
    $('#global-cookie-message .accept-all').click(function () {
      CookieMonster.set('cookies-analytics-option', 'on', 365)
      CookieMonster.set('cookies-marketing-option', 'on', 365)
      activateAllTrackingScripts()
      $('#global-cookie-message').addClass('display-none')
    })
  }
}

const rejectCookies = function ($) {
  if (!CookieMonster.get('cookies-analytics-option') && !CookieMonster.get('cookies-marketing-option')) {
    $('#global-cookie-message').removeClass('display-none')
    $('#global-cookie-message .reject-all').click(function () {
      CookieMonster.set('cookies-analytics-option', 'off', 365)
      CookieMonster.set('cookies-marketing-option', 'off', 365)
      deactivateAnalyticsScripts()
      deactivateMarketingScripts()
      $('#global-cookie-message').addClass('display-none')
    })
  }
}

jQuery(function ($) {
  $(document).ready(function () {
    rejectCookies($)
    displayCookieBanner($)
    setupCookieSettingsForm($)
    activateApprovedTrackingScripts()
  })
})

},{"@firstandthird/cookie-monster":2}],2:[function(require,module,exports){
(function (exports) {
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function set(name, value) {
  var days = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var path = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '/';
  var domain = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
  var secure = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;

  var date = new Date();
  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);

  var expires = '';
  var valueToUse = '';
  var secureFlag = '';
  var domainFlag = '';

  if (days) {
    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
    expires = '; expires=' + date.toUTCString();
  }

  if (type === 'object' && type !== 'undefined') {
    valueToUse = encodeURIComponent(JSON.stringify({ value: value }));
  } else {
    valueToUse = encodeURIComponent(value);
  }

  if (secure) {
    secureFlag = '; secure';
  }

  if (domain) {
    domainFlag = '; domain=' + encodeURIComponent(domain);
  }

  document.cookie = name + '=' + valueToUse + expires + '; path=' + path + secureFlag + domainFlag;
}

function get(name) {
  var nameEQ = name + '=';
  var split = document.cookie.split(';');
  var value = null;

  split.forEach(function (item) {
    var cleaned = item.trim();

    if (cleaned.indexOf(nameEQ) === 0) {
      value = decodeURIComponent(cleaned.substring(nameEQ.length, cleaned.length));

      if (value.substring(0, 1) === '{') {
        try {
          value = JSON.parse(value);
          value = value.value || null;
        } catch (e) {
          return;
        }
      }

      if (value === 'undefined') {
        value = undefined;
      }
    }
  });

  return value;
}

function remove(name) {
  set(name, '', -1);
}

function increment(name, days) {
  var value = get(name) || 0;
  set(name, ~~value + 1, days);
}

function decrement(name, days) {
  var value = get(name) || 0;
  set(name, ~~value - 1, days);
}

var cookieMonster_default = {
  set: set,
  get: get,
  remove: remove,
  increment: increment,
  decrement: decrement
};

exports.set = set;
exports.get = get;
exports.remove = remove;
exports.increment = increment;
exports.decrement = decrement;
exports['default'] = cookieMonster_default;

}((this.FirstandthirdCookieMonster = this.FirstandthirdCookieMonster || {})));


},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
